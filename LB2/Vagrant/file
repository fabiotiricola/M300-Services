# Vagrant Abilas Siriraj

# Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

Vagrant.configure(2) do |config|
  # Proxy Dienst
  config.vm.define "Proxy" do |proxy|
    proxy.vm.box = "ubuntu/trusty64"
    proxy.vm.provider "virtualbox" do |vb|
      vb.memory = "500"  
    end
    proxy.vm.hostname = "Proxy-Dienst"
    proxy.vm.network "private_network", ip: "192.168.255.5"
    proxy.vm.synced_folder ".", "/vagrant" 
    proxy.vm.provision "shell", path: "C:/VMs/default.sh"
    proxy.vm.provision "shell", path: "C:/VMs/proxy.sh"
  end
  
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
  
  # WEB1
  config.vm.define "Web1" do |web01|
    web01.vm.box = "ubuntu/trusty64"
    web01.vm.provider "virtualbox" do |vb|
      vb.memory = "600"  
    end
    web01.vm.hostname = "Web1"
    web01.vm.network "private_network", ip: "192.168.234.10"
    web01.vm.synced_folder ".", "/vagrant" 
    web01.vm.provision "shell", path: "C:/VMs/default.sh"
  end
  # Database
  config.vm.define "DB" do |db|
    db.vm.box = "ubuntu/trusty64"
    db.vm.provider "virtualbox" do |vb|
      vb.memory = "600"  
    end
    db.vm.hostname = "Database"
    db.vm.network "private_network", ip: "192.168.234.15"
    db.vm.synced_folder ".", "/vagrant" 
    db.vm.provision "shell", path: "C:/VMs/default.sh"
  end
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end